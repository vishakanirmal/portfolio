{"version":3,"file":"component---src-pages-404-js-47ffaf0ef272b3bb6c27.js","mappings":"6JAUA,IAPeA,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAC3BE,EAAAA,cAAA,UAAQC,UAAU,UAChBD,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAG,KAAI,QACbH,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAG,UAAS,SACX,C,+ECyCX,MA7CwBL,IAAmB,IAAlB,SAAEM,GAAUN,EACnC,MAAM,EAACO,EAAgB,EAACC,IAAsBC,EAAAA,EAAAA,WAAS,IACjD,EAACC,EAAS,EAACC,IAAeF,EAAAA,EAAAA,UAAS,IAEnCG,EAAkB,SAExBC,EAAAA,EAAAA,YAAU,KAEeC,aAAaC,QAAQ,mBACrBH,GACrBJ,GAAmB,EACrB,GACC,IAaH,OAAOD,EACLD,EAEAJ,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,QAAMc,SAfYC,IACpBA,EAAEC,iBACER,IAAaE,GAEfE,aAAaK,QAAQ,gBAAiBP,GACtCJ,GAAmB,IAEnBY,MAAM,sBACR,GAQIlB,EAAAA,cAAA,SACEmB,KAAK,WACLC,MAAOZ,EACPa,SAAWN,GAAMN,EAAYM,EAAEO,OAAOF,OACtCG,YAAY,iBACZtB,UAAU,kBAEZD,EAAAA,cAAA,UAAQmB,KAAK,UAAS,aAK3B,E,UCRH,MA/BerB,IAAmB,IAAD0B,EAAA,IAAjB,SAAEpB,GAAUN,EAC1B,MAGM2B,GAAOC,EAAAA,EAAAA,IAAe,cAUtBC,EACJ3B,EAAAA,cAAA,WACEA,EAAAA,cAAC4B,EAAAA,EAAM,CAAC7B,WAAiC,QAAtByB,EAAAC,EAAKI,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBO,QAAS,UACpD/B,EAAAA,cAAA,YAAOI,GACPJ,EAAAA,cAAA,UAAQC,UAAU,eAAc,MAC3B,IAAI+B,MAAOC,cAAc,wBAKlC,OACEjC,EAAAA,cAACkC,EAAe,CAAC1B,SAvBF,SAuBuBmB,EAGvC,C,+CCUH,IAlCA,SAAY7B,GAAoC,IAADqC,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAEN,EAAK,SAAE3B,GAAUN,EAC3C,MAAM,KAAE+B,IAASH,EAAAA,EAAAA,IAAe,YAc1BY,EAAkBD,GAAeR,EAAKC,aAAaO,YACnDE,EAAgC,QAApBJ,EAAGN,EAAKC,oBAAY,IAAAK,OAAA,EAAjBA,EAAmBJ,MAExC,OACE/B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQuC,EAAe,GAAGR,OAAWQ,IAAiBR,GACtD/B,EAAAA,cAAA,QAAMwC,KAAK,cAAcb,QAASW,IAClCtC,EAAAA,cAAA,QAAMyC,SAAS,WAAWd,QAASI,IACnC/B,EAAAA,cAAA,QAAMyC,SAAS,iBAAiBd,QAASW,IACzCtC,EAAAA,cAAA,QAAMyC,SAAS,UAAUd,QAAQ,YACjC3B,EAAAA,cAAA,QAAMwC,KAAK,eAAeb,QAAQ,YAClC3B,EAAAA,cAAA,QAAMwC,KAAK,kBAAkBb,SAA0B,QAAjBS,EAAAP,EAAKC,oBAAY,IAAAM,OAAA,EAAjBA,EAAmBM,SAAU,KACnE1C,EAAAA,cAAA,QAAMwC,KAAK,gBAAgBb,QAASI,IACpC/B,EAAAA,cAAA,QAAMwC,KAAK,sBAAsBb,QAASW,IACzClC,EAGP,C,mGCrCA,MAOauC,EAAOA,IAAM3C,EAAAA,cAAC4C,EAAAA,EAAG,CAACb,MAAM,mBAErC,UATqBc,IACnB7C,EAAAA,cAAC8C,EAAAA,EAAM,KACL9C,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2D","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/PasswordProtect.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"header\">\n    <Link to=\"/\">Work</Link>\n    <Link to=\"/about\">About</Link>\n  </header>\n)\n\nexport default Header","import React, { useState, useEffect } from \"react\";\nimport '/src/styles/global.css';\n\nconst PasswordProtect = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [password, setPassword] = useState(\"\");\n\n  const correctPassword = \"olive\"; // Set your password here\n\n  useEffect(() => {\n    // Check if the user is already authenticated by looking at localStorage\n    const storedPassword = localStorage.getItem(\"authenticated\");\n    if (storedPassword === correctPassword) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password === correctPassword) {\n      // Store the password in localStorage to remember the user is authenticated\n      localStorage.setItem(\"authenticated\", correctPassword);\n      setIsAuthenticated(true);\n    } else {\n      alert(\"Incorrect password!\");\n    }\n  };\n\n  return isAuthenticated ? (\n    children\n  ) : (\n    <div className=\"passwordpage\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Enter Password\"\n          className=\"passwordinput\"\n        />\n        <button type=\"submit\">\n          Submit →\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default PasswordProtect;\n","import * as React from \"react\";\nimport '../styles/global.css';\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport PasswordProtect from \"/src/components/PasswordProtect\";\nimport Header from \"./header\";\n\nconst Layout = ({ children }) => {\n  const passwordProtected = true;\n  const password = \"olive\";\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  const content = (\n    <div>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <main>{children}</main>\n      <footer className=\"site-footer\">\n        © {new Date().getFullYear()} &middot; Built by Vishaka\n      </footer>\n    </div>\n  );\n\n  return passwordProtected ? (\n    <PasswordProtect password={password}>{content}</PasswordProtect>\n  ) : (\n    content\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n"],"names":["_ref","siteTitle","React","className","Link","to","children","isAuthenticated","setIsAuthenticated","useState","password","setPassword","correctPassword","useEffect","localStorage","getItem","onSubmit","e","preventDefault","setItem","alert","type","value","onChange","target","placeholder","_data$site$siteMetada","data","useStaticQuery","content","Header","site","siteMetadata","title","Date","getFullYear","PasswordProtect","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","property","author","Head","Seo","NotFoundPage","Layout"],"sourceRoot":""}